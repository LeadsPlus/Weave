<?xml version="1.0" encoding="utf-8"?>
<!--
/*
    Weave (Web-based Analysis and Visualization Environment)
    Copyright (C) 2008-2011 University of Massachusetts Lowell

    This file is a part of Weave.

    Weave is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License, Version 3,
    as published by the Free Software Foundation.

    Weave is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Weave.  If not, see <http://www.gnu.org/licenses/>.
*/
-->
<mx:VBox xmlns="weave.editors.*" 
		 xmlns:mx="http://www.adobe.com/2006/mxml" 
		 width="100%" 
		 height="100%"
		 >
		<mx:CheckBox
					 id="enableMenuBar"
					 label="{lang('Show menu bar')}"
					 creationComplete="linkBindableProperty(Weave.properties.enableMenuBar, event.target, 'selected');"
					/>
	
		<mx:TabNavigator resizeToContent="true" width="100%" height="100%">
			<mx:VBox  label="{lang('Data')}" paddingLeft="10" verticalGap="{verticalGap}">
				<mx:CheckBox
							 id="dataMenu"
							 label="{lang('Data Menu')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableDataMenu, event.target, 'selected')"/>
				<mx:HBox enabled="{dataMenu.selected}">
					<mx:Spacer width="10"/>
					<mx:VBox verticalGap="{verticalGap}">
						
						<mx:CheckBox
									 label="{lang('Load my data')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableLoadMyData, event.target, 'selected')"/>
						<mx:CheckBox id="refreshDataCheckBox"
									 label="{lang('Refresh data source hierarchies')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableRefreshHierarchies, refreshDataCheckBox, 'selected')"/> 
						
						<mx:CheckBox
									 label="{lang('New Datasource')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableAddNewDatasource, event.target, 'selected')"/> 
						
						<mx:CheckBox
									 label="{lang('Edit Datasources')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableEditDatasources, event.target, 'selected')"/>
						
					</mx:VBox>
				</mx:HBox>			
			</mx:VBox>
			<mx:VBox  label="{lang('Tools')}" paddingLeft="10" verticalGap="{verticalGap}">	 	
				<mx:CheckBox
							 id="toolsMenu"
							 label="{lang('Tools Menu')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableDynamicTools, event.target, 'selected')"/>
				
				
				<mx:HBox enabled="{toolsMenu.selected}">
					<mx:Spacer width="10"/>
					<mx:VBox verticalGap="{verticalGap}">
						<mx:CheckBox 
									 label="{lang('Color Controller')}"
									 creationComplete="linkBindableProperty(Weave.properties.showColorController, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Probe Info Editor')}"
									 creationComplete="linkBindableProperty(Weave.properties.showProbeToolTipEditor, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Probe Info Window')}"
									 creationComplete="linkBindableProperty(Weave.properties.showProbeWindow, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Equation Editor')}"
									 creationComplete="linkBindableProperty(Weave.properties.showEquationEditor, event.target, 'selected')"/>
						<mx:CheckBox 
									 id="collabSettings"
									 label="{lang('Collaboration Settings')}"
									 creationComplete="linkBindableProperty(Weave.properties.showCollaborationEditor, event.target, 'selected');"
									 />
					</mx:VBox>
					<mx:VBox verticalGap="{verticalGap}" id="menuToggleVBox"/>
				</mx:HBox>	
			</mx:VBox>	
			
			<mx:VBox  width="100%" label="{lang('Selections')}" paddingLeft="10" verticalGap="{verticalGap}">	 	
				<mx:CheckBox
							 id="selectionsMenu"
							 label="{lang('Selections Menu')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableSelectionsMenu, event.target, 'selected')"/> 
				<mx:HBox enabled="{selectionsMenu.selected}">
					<mx:Spacer width="10"/>
					<mx:VBox verticalGap="{verticalGap}">
						<mx:CheckBox
									 label="{lang('Save current Selection')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableSaveCurrentSelection, event.target, 'selected')"/>
						<mx:CheckBox
									 label="{lang('Clear current Selection')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableClearCurrentSelection, event.target, 'selected')"/>
						<mx:CheckBox
									 label="{lang('Manage saved selections')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableManageSavedSelections, event.target, 'selected')"/>
					</mx:VBox>
				</mx:HBox>	
			</mx:VBox>	
			
			<mx:VBox  width="100%" label="{lang('Subsets')}" paddingLeft="10" verticalGap="{verticalGap}">	 	
				<mx:CheckBox
							 id="subsetsMenu"
							 label="{lang('Subsets Menu')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableSubsetsMenu, event.target, 'selected')"/> 
				<mx:HBox enabled="{subsetsMenu.selected}">
					<mx:Spacer width="10"/>
					<mx:VBox verticalGap="{verticalGap}">
						<mx:CheckBox
									 label="{lang('Create subset from selected records')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableCreateSubsets, event.target, 'selected')"/>
						<mx:CheckBox
									 label="{lang('Remove selected records from subset')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableRemoveSubsets, event.target, 'selected')"/>
						<mx:CheckBox
									 label="{lang('Show all records')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableShowAllRecords, event.target, 'selected')"/>
						<mx:CheckBox
									 label="{lang('Save current subset')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableSaveCurrentSubset, event.target, 'selected')"/>
						<mx:CheckBox
									 label="{lang('Manage saved subsets')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableManageSavedSubsets, event.target, 'selected')"/>
					</mx:VBox>
				</mx:HBox>	
			</mx:VBox>	
			
			<mx:VBox label="{lang('Session')}" paddingLeft="10" verticalGap="{verticalGap}">	 	
				<mx:CheckBox
							 label="{lang('Session Menu')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableSessionMenu, event.target, 'selected')"/>
				<mx:CheckBox
							 id="collabPanel"
							 label="{lang('Connect to Collaboration Server')}"
							 creationComplete="linkBindableProperty(Weave.properties.showCollaborationMenuItem, event.target, 'selected');"
							 />
			</mx:VBox>	
			
			<mx:VBox  width="100%" label="{lang('Window')}" paddingLeft="10" verticalGap="{verticalGap}">	 	
				<mx:CheckBox
							 id="windowMenu"
							 label="{lang('Window Menu')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableWindowMenu, event.target, 'selected')"/> 
				<mx:HBox >
					<mx:Spacer width="10"/>
					
					<mx:VBox verticalGap="{verticalGap}">
						<mx:CheckBox 
									 label="{lang('Preferences')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableUserPreferences, event.target, 'selected')"/>  
						<mx:CheckBox toolTip="{lang('This option must also be enabled in the embed tag of the surrounding webpage.')}"
									 label="{lang('Full-screen')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableFullScreen, event.target, 'selected')"/>  
						<mx:CheckBox 
									 label="{lang('Minimize All Windows')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableMinimizeAllWindows, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Restore All Minimized Windows')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableRestoreAllMinimizedWindows, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Close All Windows')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableCloseAllWindows, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Cascade All Windows')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableCascadeAllWindows, event.target, 'selected')"/>
						<mx:CheckBox 
									 label="{lang('Tile All Windows')}"
									 creationComplete="linkBindableProperty(Weave.properties.enableTileAllWindows, event.target, 'selected')"/>
					</mx:VBox>
				</mx:HBox>	
			</mx:VBox>	
			
			<mx:VBox label="{lang('About')}" paddingLeft="10" verticalGap="{verticalGap}">
				<mx:CheckBox
						 label="{lang('About Menu')}"
						 width="120" 
						 creationComplete="linkBindableProperty(Weave.properties.enableAboutMenu, event.target, 'selected')"/> 
			</mx:VBox>
			
			<mx:VBox label="{lang('Right-click')}" paddingLeft="10" verticalGap="{verticalGap}">
				<mx:CheckBox
							 label="{lang('Export tool screenshot')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableExportToolImage, event.target, 'selected')"/>
				<mx:CheckBox
							 label="{lang('Export application screenshot')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableExportApplicationScreenshot, event.target, 'selected')"/>
				<mx:CheckBox
							 label="{lang('Export data table')}"
							 creationComplete="linkBindableProperty(Weave.properties.enableExportCSV, event.target, 'selected')"/>
			</mx:VBox>	
		</mx:TabNavigator>
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			import weave.Weave;
			import weave.api.WeaveAPI;
			import weave.api.linkBindableProperty;
			
			override protected function createChildren():void
			{
				super.createChildren();
				
				if (menuToggleVBox.numChildren > 0)
					return;
				
				var cbArray:Array = [];
				var cb:CheckBox;
				for (var _class:Object in Weave.properties._toggleMap)
				{
					cb = new CheckBox();
					cb.label = WeaveAPI.getRegisteredImplementationDisplayName(_class as Class) || getQualifiedClassName(_class).split(':').pop();
					linkBindableProperty(Weave.properties._toggleMap[_class], cb, 'selected');
					cbArray.push(cb);
				}
				cbArray.sortOn('label');
				for each (cb in cbArray)
					menuToggleVBox.addChild(cb);
			}
			
			override protected function childrenCreated():void
			{
				super.childrenCreated();
				Weave.properties.enableMenuBar.addGroupedCallback(this, handleMenuToggled);
			}
			
			private function handleMenuToggled():void
			{
				var focus:InteractiveObject = getFocus();
				if (focus && enableMenuBar.contains(focus) && !Weave.properties.enableMenuBar.value)
				{
					// put up an alert box so the user has to confirm removing the menu bar
					Alert.show(lang("Are you sure you want to remove the menu bar?  \nOnce removed, the functions that are accessed through the menu will no longer be accessible."),
						   lang("Remove menu bar?"),
						   Alert.YES | Alert.NO,
						   null,
						   function(e:CloseEvent):void {
						   		// if the user chose yes to removing the menu bar
						   		if(e.detail == Alert.YES)
						   		{
						   			Weave.properties.enableMenuBar.value = false;
						   		}
						   		else if(e.detail == Alert.NO)
						   		{
						   			// if the user said no to removing the menu bar, reset the sessioned variable back to enabled
						   			Weave.properties.enableMenuBar.value = true;
						   		}
						   });
				}
			}
			private const verticalGap:int = 0;
		]]>
	</mx:Script>
</mx:VBox>	