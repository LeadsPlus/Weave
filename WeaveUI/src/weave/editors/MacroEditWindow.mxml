<?xml version="1.0" encoding="utf-8"?>
<ui:DraggablePanel xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:ui="weave.ui.*" layout="absolute" width="400" height="300">
	<mx:HBox width="100%" height="5%">
		<mx:Label text="Macro Name:" height="5%"/>
		<mx:TextInput id="macroNameField" width="100%" height="5%" creationComplete="setNameInput(event)"/>
	</mx:HBox>
	<mx:TextArea y="{.05*this.height}" width="100%" height="100%" id="macroEditArea"/>
	<mx:ControlBar>
		<mx:Button width="50%" height="100%" label="Save"
				   click="saveButtonClicked(event)"/>
		<mx:Button width="50%" height="100%" label="Cancel"
				   click="cancelButtonClicked(event)"/>
	</mx:ControlBar>
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.controls.TextInput;
			import mx.events.FlexEvent;
			
			import weave.core.LinkableBoolean;
			import weave.core.LinkableFunction;
			import weave.ui.AlertTextBox;
			import weave.ui.AlertTextBoxEvent;
			
			private var _macroName:String = "";
			
			public function set macroName(value:String):void
			{
				_macroName = value;	
				macroEditArea.text = (LinkableFunction.macros.getObject(_macroName) as LinkableFunction).value;
			}
			
			public function get macroName():String
			{
				return _macroName;
			}
			
			protected function saveButtonClicked(event:MouseEvent):void
			{
				if( macroNameField.text == "" )
				{
					var box:AlertTextBox = AlertTextBox.show("Macro Naming Error", "A name must be entered for the macro.");
					box.addEventListener(AlertTextBoxEvent.BUTTON_CLICKED,checkInput);
					return;
				}
				if( _macroName != macroNameField.text)
				{
					LinkableFunction.macros.removeObject(_macroName);
				}
				var savedFunc:LinkableFunction = LinkableFunction.macros.requestObject(macroNameField.text, LinkableFunction, false);
				savedFunc.value = macroEditArea.text;
				this.removePanel();
			}
			
			private function checkInput(event:AlertTextBoxEvent):void
			{
				if( event.confirm == true )
				{
					macroNameField.text = event.textInput;
					if( _macroName != macroNameField.text)
					{
						LinkableFunction.macros.removeObject(_macroName);
					}
					var funcToSave:LinkableFunction = LinkableFunction.macros.requestObject(macroNameField.text, LinkableFunction, false);
					funcToSave.value = macroEditArea.text;
					this.removePanel();
				}
			}
			
			protected function cancelButtonClicked(event:MouseEvent):void
			{
				this.removePanel();				
			}
			
			protected function setNameInput(event:FlexEvent):void
			{
				macroNameField.text = _macroName;
				
			}
			
		]]>
	</mx:Script>	
</ui:DraggablePanel>
