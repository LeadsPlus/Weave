<?xml version="1.0" encoding="utf-8"?>
<!--
	Weave (Web-based Analysis and Visualization Environment)
	Copyright (C) 2008-2011 University of Massachusetts Lowell
	
	This file is a part of Weave.
	
	Weave is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License, Version 3,
	as published by the Free Software Foundation.
	
	Weave is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.
	
	You should have received a copy of the GNU General Public License
	along with Weave.  If not, see <http://www.gnu.org/licenses/>.
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
		   width="18" height="24" mouseChildren="false">	
	
	<mx:Move id="moveEvent" duration="600" 
			 xFrom="{xFrom}" xTo="{xTo}"
			 yFrom="{yFrom}" yTo="{yTo}"
			 />
	
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			
			private var vertices:Array =
				[
					[ 0, 16 ],
					[ 1, 16 ],
					[ 4, 13 ],
					[ 8, 20 ],
					[ 9, 20 ],
					[ 10, 19 ],
					[ 7, 12 ],
					[ 11, 12 ],
					[ 11, 11 ],
					[ 0, 0 ]
				];
			private var filtersArray:Array;
			public var color:uint;
			
			[Bindable] public var xFrom:Number = 0;
			[Bindable] public var xTo:Number = 0;
			[Bindable] public var yFrom:Number = 0;
			[Bindable] public var yTo:Number = 0;
			
			override protected function createChildren():void
			{
				super.createChildren();
			}
			public static function addPopUp(parent:DisplayObject):CollabMouseCursor
			{
				var cursor:CollabMouseCursor = PopUpManager.createPopUp(parent, CollabMouseCursor) as CollabMouseCursor;
				PopUpManager.centerPopUp(cursor);
				cursor.initializeCursor();
				
				return cursor;
			}
			
			public function setPos(x:Number, y:Number):void
			{
				moveEvent.stop();
				yFrom = this.y;
				xFrom = this.x;
				yTo = y;
				xTo = x;
				moveEvent.play([this]);
			}
			public function initializeCursor():void
			{
				color = 0;
				graphics.clear();
				graphics.lineStyle(1, 0, 1.0, true);
				graphics.moveTo(0, 0);
				for each( var vertex:Array in vertices )
					graphics.lineTo(vertex[0], vertex[1]);
			}
			public function fillCursor(color:uint):void
			{
				this.color = color;
				graphics.clear();
				graphics.lineStyle(1, 0, 1.0, true);
				graphics.moveTo(0, 0);
				graphics.beginFill(color, 0.5);
				for each( var vertex:Array in vertices )
					graphics.lineTo(vertex[0], vertex[1]);
				graphics.endFill();
				this.filters = [ new DropShadowFilter() ];
			}
			public function removePopUp():void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
</mx:Canvas>
